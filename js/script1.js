"use strict";

 //Task 1
 console.group("Task 1");
 //Починаємо виконувати код - синхронно, тому відразу виводиться в консоль - перший запис
 console.log('start');

 //Створюємо проміс
 const promise1 = new Promise((resolve, reject) => {
     //код досі виконується синхронно, тому знову виводиться наступний запис в консоль - другий запис
     console.log(1)
     //Проміс переводиться в стан fulfilled зі значенням \2\, код йде асинхронно
     resolve(2)
 })
 //Обробляється результат асинхронного проміса, потрапляє в Job Queue (викличетьс при наступному rendering, перед виконанням завдань з task queue)
 //буде виконано тільки тоді, коли очиститься call stack зі синхронним кодом першого (глобального) рівня, прийде черга до завдання в Job Queue - нас буде четвертий запис в консолы
 promise1.then(res => {
     console.log(res)
 })

 //продовжиться виконання синхронного коду, виведеться в консоль третій запис
 console.log('end');

 console.groupEnd()