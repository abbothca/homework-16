"use strict";

//Task 2
// console.group буде порожнім : закриється зразу ж, бо проміс потрапить в Job queue і буде виконаний пізніше
console.group("Task 2"); 
//Стоврюємо ланцюг промісів зарезолвивши значення \1\ - використано метод resolve для класу Promise
Promise.resolve(1)
    // запустимо ланцюг промісів 
    // збільшимо значення на +1, уже буде \2\ і повернемо його
    .then((x) => x + 1)
    // на цьому етапі згенерується помилка з текстом 'My Error' і ланцюг обірветься
    .then((x) => { throw new Error('My Error') })
    // помилка буде оброблена в наступному найближсому блоці catch, тобто тут
    // повернеться значенн \1\
    .catch(() => 1)
    // знову збільшимо на 1 і повернемо \2\
    .then((x) => x + 1)
    // виведемо в консоль отримане значення на вході, тобто \2\
    .then((x) => console.log(x))
    // в даному випадку нема помилки, яка б обробилася тут, не спрацює
    .catch(console.error);

console.groupEnd();